split1[123]
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url = url2, destfile ="./3 Getting and Cleaning Data/Q4-2.csv", method = "curl")
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-1.csv")
View(data2)
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-2.csv")
View(data2)
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-2.csv", stringsAsFactors = False)
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-2.csv", stringsAsFactors = F)
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-2.csv", header = F,stringsAsFactors = F)
data2.1 <- data2[4:,]
data2.1 <- data2[4:nrows(data2),]
data2.1 <- data2[4:NRows(data2),]
data2.1 <- data2[4:Nows(data2),]
data2.1 <- data2[4:Nrows(data2),]
data2.1 <- data2[4:nrow(data2),]
View(data2.1)
data2.1 <- data2[6:nrow(data2),]
View(data2.1)
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-2.csv", header = F,stringsAsFactors = F)
data2.1 <- data2[6:nrow(data2),]
remCommas <- function(x) {sub(",","",x)}
GDPs <- remCommas(data2.1$V5)
mean(GPDs)
mean(GDPs)
mean(GDPs,na.rm = T)
mean(GDPs,na.rm = TRUE)
remCommas <- function(x) {sub(",","",x)}
GDPs <- remCommas(na.omit(data2.1$V5))
mean(GDPs,na.rm = TRUE)
remCommas <- function(x) {sub(",","",x)}
GDPs <- remCommas(na.omit(data2.1$V5))
remCommas <- function(x) {gsub(",","",x)}
GDPs <- remCommas(na.omit(data2.1$V5))
mean(GDPs,na.rm = TRUE)
GDPs
GDPs <- remCommas(na.omit(as.int(data2.1$V5))
GDPs <- remCommas(na.omit(as.int(data2.1$V5)))
GDPs <- remCommas(na.omit(as.int(data2.1$V5)))
View(data2.1)
GDPcol <- as.int(data2.1$V5)
GDPcol <- as.numeric(data2.1$V5)
table(GDPcol)
summary(GDPcol)
GDPcol
View(data2.1)
data2.1$V5[1]
as.numeric(data2.1$V5[1])
?str_trim
??str_trim
install.packages(stringr)
install.packages("stringr")
?str_trim
library(stringr)
?str_trim
GDPcol <- str_trim(data2.1$V5)
GDPcol <- as.numeric(GDPcol)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol <- as.numeric(GDPcol)
GDPcol[GDPcol == "0"] <- NA
GDPcol <- na.rm(GDPcol)
GDPcol <- na.omit(GDPcol)
mean(GDPs,na.rm = TRUE)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol <- as.numeric(GDPcol)
GDPcol[GDPcol == "0"] <- NA
GDPcol
GDPcol <- na.omit(GDPcol)
GDPcol
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol <- as.numeric(GDPcol)
GDPcol[GDPcol == "0"] <- NA
GDPcol <- GDPcol[!NA]
GDPcol <- GDPcol[GDPcol =!NA]
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol <- as.numeric(GDPcol)
GDPcol[GDPcol == "0"] <- NA
mean(GDPs,na.rm = TRUE)
GDPcol <- GDPcol[!is.na(GDPcol)]
GDPcol
mean(GDPs)
mean(GDP)
mean(GDPcol)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol <- as.numeric(GDPcol)
GDPcol[GDPcol == "0"] <- NA
GDPcol <- GDPcol[!is.na(GDPcol)]
mean(GDPcol)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol <- as.numeric(GDPcol)
#GDPcol[GDPcol == "0"] <- NA
GDPcol <- GDPcol[!is.na(GDPcol)]
mean(GDPcol)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol[GDPcol == ".."] <- 0
GDPcol <- as.numeric(GDPcol)
GDPcol <- GDPcol[!is.na(GDPcol)]
mean(GDPcol)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol[GDPcol == ".."] <- 0
GDPcol <- as.numeric(GDPcol)
GDPcol
data2 <- read.csv(file="./3 Getting and Cleaning Data/Q4-2.csv", header = F,stringsAsFactors = F)
data2.1 <- data2 #[6:nrow(data2),]
# Process GDP col: remove spaces and commas, then NAs
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol[GDPcol == ".."] <- 0
GDPcol <- as.numeric(GDPcol)
GDPcol <- GDPcol[!is.na(GDPcol)]
mean(GDPcol)
View(data2.1)
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol[GDPcol == ".."] <- NA
GDPcol <- as.numeric(GDPcol)
GDPcol <- GDPcol[!is.na(GDPcol)]
mean(GDPcol)
GDPcol
data2.1 <- data2[6:220,]
# Process GDP col: remove spaces and commas, then NAs
GDPcol <- str_trim(data2.1$V5)
GDPcol <- gsub(",","",GDPcol)
GDPcol[GDPcol == ".."] <- NA
GDPcol <- as.numeric(GDPcol)
GDPcol <- GDPcol[!is.na(GDPcol)]
mean(GDPcol)
countryNames <- data2.1$V4
countryNames
grep("^United",countryNames)
url4gdp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url = url4gdp, destfile ="./3 Getting and Cleaning Data/Q4-4gdp.csv", method = "curl")
download.file(url = url4edu, destfile ="./3 Getting and Cleaning Data/Q4-4edu.csv", method = "curl")
data4gdp <-read.csv(file="./3 Getting and Cleaning Data/Q4-4gdp.csv", stringsAsFactors = F)
data4gdp <-read.csv(file="./3 Getting and Cleaning Data/Q4-4edu.csv", stringsAsFactors = F)
data4edu <-read.csv(file="./3 Getting and Cleaning Data/Q4-4edu.csv", stringsAsFactors = F)
View(data4edu)
View(data4gdp)
names(data4edu)
names(data4edu) = names(data4gdp)
names(data4edu) == names(data4gdp)
download.file(url = url4gdp, destfile ="./3 Getting and Cleaning Data/Q4-4gdp.csv", method = "curl")
download.file(url = url4edu, destfile ="./3 Getting and Cleaning Data/Q4-4edu.csv", method = "curl")
data4gdp <-read.csv(file="./3 Getting and Cleaning Data/Q4-4gdp.csv", stringsAsFactors = F)
data4edu <-read.csv(file="./3 Getting and Cleaning Data/Q4-4edu.csv", stringsAsFactors = F)
names(data4edu) == names(data4gdp)
View(data4gdp)
View(data4edu)
data4gdp <- data4gdp[6:219,c(1,2,4,5)]
View(data4gdp)
names(data4gdp) <- c("CountryCode","Ranking","Country","GDP")
View(data4gdp)
mergedSet <- merge(data4gdp, data4edu)
ncol(mergedSet)
for i = 1 to ncol(mergedSet) {
grep("June", names(mergedSet)
}
for i in 1:ncol(mergedSet) {
grep("June", names(mergedSet)
}
for i in 1:ncol(mergedSet) {
grep("June", names(mergedSet))
}
for i in 1:ncol(mergedSet) {
grep("June", mergedSet[i]))
}
for i in 1:ncol(mergedSet) {
grep("June", mergedSet[,i]))
}
for (i in 1:ncol(mergedSet)) {
grep("June", mergedSet[,i]))
}
for (i in 1:ncol(mergedSet)) {
grep("June", mergedSet[,i])
}
for (i in 1:ncol(mergedSet)) {
if length(grep("June", mergedSet[,i])) > 0 {i}
}
for (i in 1:ncol(mergedSet)) {
if (length(grep("June", mergedSet[,i])) > 0) {i}
}
for (i in 1:ncol(mergedSet)) {
if (length(grep("June", mergedSet[,i])) > 0) i
}
for (i in 1:ncol(mergedSet)) {
if (length(grep("June", mergedSet[,i])) > 0)
i
}
names(mergedSet)
url4gdp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4edu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url = url4gdp, destfile ="./3 Getting and Cleaning Data/Q4-4gdp.csv", method = "curl")
download.file(url = url4edu, destfile ="./3 Getting and Cleaning Data/Q4-4edu.csv", method = "curl")
data4gdp <-read.csv(file="./3 Getting and Cleaning Data/Q4-4gdp.csv", stringsAsFactors = F)
data4edu <-read.csv(file="./3 Getting and Cleaning Data/Q4-4edu.csv", stringsAsFactors = F)
names(data4edu)
names(data4gdp) <- c("CountryCode","Ranking","Country","GDP")
mergedSet <- merge(data4gdp, data4edu)
for (i in 1:ncol(mergedSet)) {
if (length(grep("*June*", mergedSet[,i])) > 0)
i
}
mergedSet[,30]
View(mergedSet)
data4gdp <- data4gdp[6:219,c(1,2,4,5)]
names(data4gdp) <- c("CountryCode","Ranking","Country","GDP")
mergedSet <- merge(data4gdp, data4edu)
View(mergedSet)
mergedSet$Special.Notes
findcol <- mergedSet$Special.Notes
length(grep("[Ff]iscal year ( +[^ ]+ +){1,5}))", findcol)
length(grep("[Ff]iscal year ( +[^ ]+ +){1,5}))", findcol))
grep("[Ff]iscal year ( +[^ ]+ +){1,5}))", findcol)
grep("[Ff]iscal year end( +[^ ]+ +){1,5}))", findcol)
grep("[Ff]iscal year end.* June", findcol)
length(grep("[Ff]iscal year end.* June", findcol))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
sampleTimes[1]
sampleTimes[years(sampleTimes)==2012]
years(sampleTimes[1273])
year(sampleTimes[1273])
format(sampleTimes[1273],"%Y")
sampleTimes[format(sampleTimes,"%Y")=="2012"]
length(sampleTimes[format(sampleTimes,"%Y")=="2012"])
weekdays(sampleTimes[1])
length(twelv[weekdays(twelv)=="Monday"])
elv <- sampleTimes[format(sampleTimes,"%Y")=="2012"]
length(twelv)
length(twelv[weekdays(twelv)=="Monday"])
twelv <- sampleTimes[format(sampleTimes,"%Y")=="2012"]
length(twelv)
length(twelv[weekdays(twelv)=="Monday"])
setwd "5 Reproducible Research"
setwd 5 Reproducible Research
setwd ("5 Reproducible Research")
ls
list
list(ls)
ls()
setwd("~/Desktop/Coursera/5 Reproducible Research/RepData_PeerAssessment1")
data <- read.csv(file = "activity.csv",header = T,sep = ",",stringsasFactors=F)
data <- read.csv(file = "activity.csv",header = T,sep = ",",stringsAsFactors=F)
View(data)
dataFull <- read.csv(file = "activity.csv",header = T,sep = ",",stringsAsFactors=F)
data <- na.omit(dataFull)
View(data)
summary(dataFull)
library(knitr)
totSteps_Day <- aggregate(steps ~ date, data = stepData,FUN = sum)
stepDataFull <- read.csv(file = "activity.csv",header = T,sep = ",",stringsAsFactors=F)
stepData <- na.omit(dataFull)
rm(data, dataFull)
totSteps_Day <- aggregate(steps ~ date, data = stepData,FUN = sum)
View(totSteps_Day)
library(ggplot2)
qplot(steps, data = totSteps_Day)
qplot(date, data = totSteps_Day)
qplot(steps, x=date, data = totSteps_Day)
qplot(steps ~ date, data = totSteps_Day)
hist(steps, data = totSteps_Day)
hist(totSteps_Day$steps)
qplot(steps, data = totSteps_Day)
avgSteps <- aggregate(steps ~ interval, data = stepData, FUN = mean)
View(avgSteps)
View(stepData)
avgSteps <- aggregate(steps ~ interval, data = stepData, FUN = mean)
plot(steps ~ interval, data = stepData,type = "l")
View(avgSteps)
plot(steps ~ interval, data = avgSteps,type = "l")
View(avgSteps)
xlab = "time (minutes)", ylab="number of steps")
plot(steps ~ interval, data = avgSteps,type = "l", main="Average steps by Time Interval",
xlab = "time (minutes)", ylab="number of steps")
hist(steps, data = totSteps_Day)
avgSteps$interval[which(max(avgSteps$steps))]
avgSteps$interval[avgSteps$steps==(max(avgSteps$steps))]
?replace
View(stepDataFull)
view(aggregate(steps ~ date, data = stepDataFull, fun=sum))
View(aggregate(steps ~ date, data = stepDataFull, fun=sum))
View(aggregate(steps ~ date, data = stepDataFull,FUN=sum))
stepDataFull_manip <- replace(x = stepDataFull$steps,NA,-900)
qplot(steps ~ date, data = stepDataFull_manip)
plot(steps ~ date, data = stepDataFull_manip)
qplot(steps, date, data = stepDataFull_manip)
qplot(y=steps, x=date, data = stepDataFull_manip)
stepDataFull_manip <- replace(x = stepDataFull,NA,-900)
stepDataFull_manip <- stepDataFull
stepDataFull_manip$steps <- replace(stepsDataFull_manip$steps, is.na(stepsDataFull_manip$steps), -900)
stepDataFull_manip$steps <- replace(stepDataFull_manip$steps, is.na(stepDataFull_manip$steps), -900)
qplot(y=steps, x=date, data = stepDataFull_manip)
sum(is.na(stepsDataFull))
sum(is.na(stepDataFull))
sum(is.na(stepDataFull$steps))
rm(stepDataFull_manip)
naDates <- stepDataFull$dates[which(is.na(stepDataFull$steps))]
naDates <- stepDataFull$dates[(is.na(stepDataFull$steps))]
naDates <- stepDataFull$dates[stepDataFull$steps==NA]
stepDataFull$steps==NA
naDates <- stepDataFull$date[stepDataFull$steps==NA]
summary(naDates)
sum(naDates)
naDates <- stepDataFull$date[which(is.na(stepDataFull$steps))]
naDates
unique(naDates)
naDates <- unique(stepDataFull$date[which(is.na(stepDataFull$steps))])
allDates <- unique(stepDataFull$date)
stepsFullImputed$date==naDates[i]
stepsFullImputed <- stepDataFull #(still has NAs)
stepsFullImputed <- stepDataFull #(still has NAs)
stepsFullImputed$date==naDates[i]
stepsFullImputed$date==naDates[1]
View(stepsFullImputed)
for (i in naDates){
stepsFullImputed <- replace(stepsFullImputed$steps,stepsFullImputed$date==naDates[i],avgSteps)
}
View(avgSteps)
stepsFullImputed <- replace(stepsFullImputed$steps,NA,avgSteps)
stepsFullImputed <- replace(stepsFullImputed$steps,NA,avgSteps)
replace(stepsFullImputed$steps,NA,avgSteps)
stepsFullImputed <- replace(stepsFullImputed$steps,is.na(stepsFullImputed$steps),avgSteps)
rm(stepsFullIMputed)
rm(stepsFullImputed)
stepsFullImputed <- replace(stepsFullImputed$steps[date=naDates[i]],is.na(stepsFullImputed$steps),avgSteps)
stepsFullImputed <- stepDataFull #(still has NAs)
for (i in naDates){
stepsFullImputed <- replace(stepsFullImputed$steps[date=naDates[i]],is.na(stepsFullImputed$steps),avgSteps)
}
summary(stepsFullImputed$steps[date=naDates[i]])
stepsFullImputed <- stepDataFull #(still has NAs)
summary(stepsFullImputed$steps[date=naDates[i]])
summary(stepsFullImputed$steps[date=naDates[1]])
head(stepsFullImputed$steps[date=naDates[1]])
for (i in naDates){
naData_i <- stepsFullImputed$steps[date=naDates[i]]
stepsFullImputed$steps <- replace(x, is.na(x), avgSteps)
}
for (i in naDates){
naData_i <- stepsFullImputed$steps[date=naDates[i]]
stepsFullImputed$steps <- replace(naData_i, is.na(naData_i), avgSteps)
}
stepsFullImputed <- stepDataFull #(still has NAs)
for (i in naDates){
naData_i <- stepsFullImputed$steps[date=naDates[i]]
stepsFullImputed$steps <- replace(naData_i, is.na(naData_i), avgSteps$steps)
}
stepsFullImputed <- stepDataFull #(still has NAs)
for (i in naDates){
naData_i <- stepsFullImputed$steps[date=naDates[i]]
stepsFullImputed$steps <- replace(naData_i, is.na(naData_i), avgSteps$steps)
}
View(stepsFullImputed)
View(avgSteps)
naData_i <- stepsFullImputed$steps[date=naDates[i]]
naData_i <- stepsFullImputed$steps[stepsFullImputed$date=naDates[i]]
naData_i <- stepsFullImputed$steps[stepsFullImputed$date==naDates[i]]
i = 1
naData_i <- stepsFullImputed$steps[stepsFullImputed$date==naDates[i]]
stepsFullImputed <- stepDataFull #(still has NAs)
for (i in naDates){
naData_i <- stepsFullImputed$steps[stepsFullImputed$date==naDates[i]]
stepsFullImputed$steps[stepsFullImputed$date=naDates[i]] <- replace(naData_i, is.na(naData_i), avgSteps$steps)
}
stepsFullImputed <- stepDataFull #(still has NAs)
for (i in naDates){
naData_i <- stepsFullImputed$steps[stepsFullImputed$date==naDates[i]]
stepsFullImputed$steps[stepsFullImputed$date==naDates[i]] <- replace(naData_i, is.na(naData_i), avgSteps$steps)
}
summary(avgSteps)
View(avgSteps)
stepsFullImputed <- stepDataFull #(still has NAs)
for (iDate in naDates){
naData_i <- stepsFullImputed$steps[stepsFullImputed$date==iDate]
stepsFullImputed$steps[stepsFullImputed$date==iDate] <- replace(naData_i, is.na(naData_i), avgSteps$steps)
}
View(stepsFullImputed)
View(avgSteps)
View(stepDataFull)
naDates <- unique(stepDataFull$date[which(is.na(stepDataFull$steps))])
stepsFullImputed <- stepDataFull
for (iDate in naDates){
naData_i <- stepsFullImputed$steps[stepsFullImputed$date==iDate]
stepsFullImputed$steps[stepsFullImputed$date==iDate] <- replace(naData_i,
is.na(naData_i), avgSteps$steps)
}
summary(stepsFullImputed)
sum(is.na(stepsFullImputed))
head(stepsFullImputed)
summary(stepsFullImputed)
hist(stepsFullImputed$steps, main="Total Number of Steps Taken Each Day", xlabel="Steps")
hist(stepsFullImputed$steps, main="Total Number of Steps Taken Each Day", xlab="Steps")
totSteps_Day_imputed <- aggregate(steps ~ date, data=stepsFullImputed,FUN = sum)
hist(totSteps_Day_imputed, main="Frequency of Total Number of Steps Taken Each Day", xlab="Steps")
hist(totSteps_Day_imputed$steps, main="Frequency of Total Number of Steps Taken Each Day", xlab="Steps")
?weekdays
weekdays(as.Date("2012-10-02"))
function DoWtype(strDate){
DoW <- weekdays(as.Date(strDate))
if DoW == ("Saturday" | "Sunday") then {typ = "weekend"}
else {typ = "weekday"}
typ
}
DoWtyp <- function(d){
DoW <- weekdays(as.Date(d))
if DoW == ("Saturday" | "Sunday") then {typ = "weekend"}
else {typ = "weekday"}
typ
}
DoWtyp <- function(d){
DoW <- weekdays(as.Date(d))
if DoW == ("Saturday" | "Sunday")  {typ = "weekend"}
else {typ = "weekday"}
typ
}
"Tuesday" == ("Saturday" | "Sunday")
("Tuesday" == "Saturday") | ("Tuesday" = "Sunday")
("Tuesday" == "Saturday") or ("Tuesday" = "Sunday")
DoWtyp <- function(d){
DoW <- weekdays(as.Date(d))
if DoW %in% c("Saturday", "Sunday")  {typ = "weekend"}
else {typ = "weekday"}
typ
}
DoWtyp <- function(d){
DoW <- weekdays(as.Date(d))
if (DoW %in% c("Saturday", "Sunday"))  {typ = "weekend"}
else {typ = "weekday"}
typ
}
DoWtyp("2012-10-02")
DoWtyp("2012-9-30")
stepsFullImputed_DoW <- stepsFullImputed
stepsFullImputed_DoW$DoWtype <- DoWtyp(stepsFullImputed_DoW$date)
View(stepsFullImputed_DoW)
stepsFullImputed_DoW$DoWtype <- weekdays(as.Date(stepsFullImputed_DoW$date))
View(stepsFullImputed_DoW)
stepsFullImputed_DoW$DoWtype[stepsFullImputed_DoW$DoWtype=="Saturday" |
stepsFullImputed_DoW$DoWtype=="Sunday"] <-- "weekend"
stepsFullImputed_DoW$DoWtype[stepsFullImputed_DoW$DoWtype %in% c("Saturday","Sunday")] <-- "weekend"
stepsFullImputed_DoW$DoWtype %in% c("Saturday","Sunday") <-- "weekend"
stepsFullImputed_DoW$DoWtype %in% c("Saturday","Sunday") <- "weekend"
stepsFullImputed_DoW$DoWtype[stepsFullImputed_DoW$DoWtype %in% c("Saturday","Sunday")] <- "weekend"
View(stepsFullImputed_DoW)
stepsFullImputed_DoW$DoWtype[stepsFullImputed_DoW$DoWtype %in% weekdays] <- "weekday"
weekdays <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
stepsFullImputed_DoW$DoWtype[stepsFullImputed_DoW$DoWtype %in% weekdays] <- "weekday"
View(stepsFullImputed_DoW)
stepsFullImputed_DoWEnd <- stepsFullImputed_DoW[DoWtype=="weekend"]
stepsFullImputed_DoWEnd <- stepsFullImputed_DoW[stepsFullImputed_DoW$DoWtype=="weekend"]
stepsFullImputed_DoWEnd <- stepsFullImputed_DoW[stepsFullImputed_DoW$DoWtype=="weekend",]
stepsFullImputed_DoWDay <- stepsFullImputed_DoW[stepsFullImputed_DoW$DoWtype=="weekday",]
avg_wEndSteps <- aggregate(steps ~ DoWtype, data=stepsFullImputed_DoWEnd, FUN=mean)
avg_WDaySteps <- aggregate(steps ~ DoWtype, data=stepsFullImputed_DoWDay, FUN=mean)
View(avg_WDaySteps)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
View(avg_WDaySteps)
View(avg_WDaySteps)
View(stepsFullImputed_DoW)
View(stepsFullImputed_DoWDay)
View(stepsFullImputed_DoWEnd)
avg_wEndSteps <- aggregate(steps ~ DoW, data=stepsFullImputed_DoWEnd, FUN=mean)
avg_WDaySteps <- aggregate(steps ~ DoW, data=stepsFullImputed_DoWDay, FUN=mean)
View(avg_WDaySteps)
View(avg_WDaySteps)
avg_wEndSteps <- aggregate(steps ~ interval, data=stepsFullImputed_DoWEnd, FUN=mean)
avg_WDaySteps <- aggregate(steps ~ interval, data=stepsFullImputed_DoWDay, FUN=mean)
View(avg_WDaySteps)
library(lattice)
xyplot(steps ~ interval | DoWtype, data=stepsFullImputed_DoW)
xyplot(steps ~ interval | DoWtype, data=stepsFullImputed_DoW, type = "l")
xyplot(steps ~ interval | DoWtype, data=stepsFullImputed_DoW, type = "l", layout=c(1,2))
avg_wEndSteps <- aggregate(steps ~ interval+DoWtype, data=stepsFullImputed_DoWEnd, FUN=mean)
View(avg_wEndSteps)
avg_wEndSteps <- aggregate(steps ~ interval+DoWtype, data=stepsFullImputed_DoW, FUN=mean)
View(avg_wEndSteps)
summary(avg_wEndSteps)
table(avg_wEndSteps)
str(avg_wEndSteps)
tail(avg_wEndSteps)
View(avg_wEndSteps)
rm(list=Ls())
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
xyplot(steps ~ interval | DoWtype, data=avgStepsFullDoW, type = "l", layout=c(1,2), xlab="Interval",ylab="Number of steps")
xyplot(steps ~ interval | DoWtype, data=avgStepsFullDoW, type = "l", layout=c(1,2),
xlab="Time Interval (minutes)",ylab="Number of steps",
main="Average Steps Taken Per Time Interval for Weekend vs Weekday")
stepDataFull <- read.csv(file = "activity.csv",header = T,sep = ",",stringsAsFactors=F)
ls
ls()
rm(list=ls())
list()
list
setwd("~/Desktop/Coursera/5 Reproducible Research/RepData_PeerAssessment1")
